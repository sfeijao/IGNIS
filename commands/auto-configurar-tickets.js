const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits, MessageFlags } = require('discord.js');
const TicketPermissionManager = require('../utils/TicketPermissionManager');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('auto-configurar-tickets')
        .setDescription('Configura automaticamente os cargos de staff para o sistema de tickets')
        .addBooleanOption(option =>
            option.setName('forcar')
                .setDescription('For√ßar reconfigura√ß√£o mesmo se j√° existirem cargos configurados')
                .setRequired(false))
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild),

    async execute(interaction) {
        await interaction.deferReply({ flags: MessageFlags.Ephemeral });

        try {
            const forcar = interaction.options.getBoolean('forcar') || false;
            const permissionManager = new TicketPermissionManager();
            
            // Verificar configura√ß√£o atual
            const currentConfig = permissionManager.getConfig();
            
            if (currentConfig.staffRoles.length > 0 && !forcar) {
                const suggestions = await permissionManager.suggestStaffRoles(interaction.guild);
                
                if (suggestions.suggestions.length === 0) {
                    return await interaction.editReply({
                        content: '‚úÖ **Sistema j√° configurado!**\n\n' +
                                `‚Ä¢ **Cargos configurados:** ${suggestions.alreadyConfigured.length}\n` +
                                `‚Ä¢ **Novos detectados:** ${suggestions.suggestions.length}\n\n` +
                                'üí° Use `forcar: True` se quiseres reconfigurar tudo novamente.'
                    });
                }
            }

            // Auto-configurar
            const result = await permissionManager.autoConfigureStaffRoles(interaction.guild);

            // Criar embed de resultado
            const embed = new EmbedBuilder()
                .setTitle('‚úÖ Auto-configura√ß√£o Conclu√≠da')
                .setDescription('Cargos de staff configurados automaticamente para o sistema de tickets')
                .setColor(0x00ff00)
                .setTimestamp();

            if (result.detected.length > 0) {
                // Separar por tipo de detec√ß√£o
                const permissionRoles = result.detected.filter(r => r.reason === 'permissions');
                const nameRoles = result.detected.filter(r => r.reason === 'name');

                if (permissionRoles.length > 0) {
                    embed.addFields({
                        name: 'üõ°Ô∏è Configurados por Permiss√µes',
                        value: permissionRoles.map(role => 
                            `‚Ä¢ **${role.name}**\n  Permiss√µes: ${role.permissions.join(', ')}`
                        ).join('\n'),
                        inline: false
                    });
                }

                if (nameRoles.length > 0) {
                    embed.addFields({
                        name: 'üìù Configurados por Nome',
                        value: nameRoles.map(role => 
                            `‚Ä¢ **${role.name}** (padr√£o: ${role.matchedPattern})`
                        ).join('\n'),
                        inline: false
                    });
                }
            }

            // Estat√≠sticas
            embed.addFields({
                name: 'üìä Resumo',
                value: [
                    `‚Ä¢ **Total detectado:** ${result.detected.length}`,
                    `‚Ä¢ **Total configurado:** ${result.configured.length}`,
                    `‚Ä¢ **Cargos ativos:** ${result.total}`,
                    `‚Ä¢ **Servidor:** ${interaction.guild.name}`
                ].join('\n'),
                inline: false
            });

            // Instru√ß√µes
            let instructions = '**Pr√≥ximos Passos:**\n';
            instructions += '‚Ä¢ Use `/configurar-painel-tickets` para criar o painel\n';
            instructions += '‚Ä¢ O sistema est√° pronto para usar! üé´';

            embed.addFields({
                name: 'üìã Instru√ß√µes',
                value: instructions,
                inline: false
            });

            if (result.detected.length === 0) {
                embed.setColor(0xffaa00)
                    .setTitle('‚ö†Ô∏è Nenhum Cargo Detectado')
                    .setDescription('N√£o foram encontrados cargos de staff neste servidor.')
                    .addFields({
                        name: 'üí° Sugest√µes',
                        value: [
                            '‚Ä¢ Certifica-te que os cargos t√™m permiss√µes adequadas',
                            '‚Ä¢ Usa nomes comuns como "Staff", "Moderador", "Admin"',
                            '‚Ä¢ Configura manualmente com `/configurar-painel-tickets`'
                        ].join('\n'),
                        inline: false
                    });
            }

            embed.setFooter({ 
                text: `Auto-configura√ß√£o executada por ${interaction.user.tag}`
            });

            await interaction.editReply({ embeds: [embed] });

        } catch (error) {
            console.error('Erro na auto-configura√ß√£o:', error);
            await interaction.editReply({
                content: '‚ùå **Erro na Auto-configura√ß√£o**\n\n' +
                        'N√£o foi poss√≠vel configurar automaticamente os cargos de staff.\n' +
                        'Contacta um administrador ou configura manualmente.'
            });
        }
    }
};