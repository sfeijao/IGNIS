const { SlashCommandBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('diagnostico')
        .setDescription('Diagn√≥stico completo do bot'),

    async execute(interaction) {
        try {
            console.log('ü©∫ Iniciando diagn√≥stico...');
            
            // Resposta imediata
            await interaction.reply('üîÑ Executando diagn√≥stico...');
            
            // Informa√ß√µes detalhadas
            const info = [
                `ü§ñ Bot: ${interaction.client.user.tag}`,
                `üÜî ID: ${interaction.client.user.id}`,
                `üèì Ping: ${interaction.client.ws.ping}ms`,
                `üåê Servidor: ${interaction.guild.name}`,
                `üë§ Utilizador: ${interaction.user.tag}`,
                `üìÖ Hora: ${new Date().toLocaleString()}`,
                `üíæ Comandos: ${interaction.client.commands.size}`,
                `üîß Node: ${process.version}`,
                `‚ö° Mem√≥ria: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB`
            ].join('\n');

            // Webhooks carregados (tipos)
            let webhookInfo = '';
            try {
                const wm = interaction.client.webhooks;
                if (wm && typeof wm.getAllLoaded === 'function') {
                    const all = wm.getAllLoaded();
                    const lines = Object.entries(all).map(([gid, types]) => `‚Ä¢ ${gid}${gid === interaction.guild.id ? ' (este servidor)' : ''}: ${types.join(', ') || '‚Äî'}`);
                    webhookInfo = lines.length ? `\nüîó Webhooks carregados:\n${lines.join('\n')}` : '';
                }
            } catch {}

            await interaction.editReply(`‚úÖ **Diagn√≥stico Completo:**\n\`\`\`${info}\`\`\`${webhookInfo}`);
            console.log('‚úÖ Diagn√≥stico conclu√≠do');
            
        } catch (error) {
            console.error('‚ùå Erro no diagn√≥stico:', error);
            try {
                await interaction.reply('‚ùå Erro no diagn√≥stico!');
            } catch (e) {
                console.error('‚ùå Erro cr√≠tico:', e);
            }
        }
    },
};
