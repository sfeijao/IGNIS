const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, StringSelectMenuBuilder, PermissionFlagsBits } = require('discord.js');
const TicketPermissionManager = require('../utils/TicketPermissionManager');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('painel-tickets-avancado')
        .setDescription('üöÄ Cria um painel de tickets moderno e avan√ßado com m√∫ltiplas categorias')
        .addChannelOption(option =>
            option.setName('canal')
                .setDescription('Canal onde ser√° enviado o painel (padr√£o: canal atual)')
                .setRequired(false))
        .addStringOption(option =>
            option.setName('estilo')
                .setDescription('Estilo do painel')
                .addChoices(
                    { name: 'üéØ Corporativo', value: 'corporate' },
                    { name: 'üéÆ Gaming', value: 'gaming' },
                    { name: 'üíé Premium', value: 'premium' },
                    { name: 'üåü Moderno', value: 'modern' }
                )
                .setRequired(false))
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild),

    async execute(interaction) {
        try {
            const targetChannel = interaction.options.getChannel('canal') || interaction.channel;
            const style = interaction.options.getString('estilo') || 'modern';
            
            await interaction.deferReply({ ephemeral: true });

            // Auto-configurar permiss√µes
            const permissionManager = new TicketPermissionManager();
            await permissionManager.autoConfigureStaffRoles(interaction.guild);

            // Configura√ß√µes de estilo
            const styles = {
                corporate: {
                    color: '#2B2D31',
                    title: 'üè¢ CENTRAL DE ATENDIMENTO EMPRESARIAL',
                    description: 'Sistema profissional de gest√£o de solicita√ß√µes',
                    categories: [
                        { id: 'support', name: 'Suporte T√©cnico', emoji: 'üíª', desc: 'Problemas t√©cnicos e configura√ß√µes' },
                        { id: 'billing', name: 'Financeiro', emoji: 'üí∞', desc: 'Quest√µes de pagamento e fatura√ß√£o' },
                        { id: 'feedback', name: 'Feedback', emoji: 'üìù', desc: 'Sugest√µes e melhorias' },
                        { id: 'partnership', name: 'Parcerias', emoji: 'ü§ù', desc: 'Propostas comerciais' }
                    ]
                },
                gaming: {
                    color: '#5865F2',
                    title: 'üéÆ CENTRAL DE SUPORTE GAMER',
                    description: 'Sistema √©pico para resolu√ß√£o de quest√µes',
                    categories: [
                        { id: 'bug', name: 'Report Bug', emoji: 'üêõ', desc: 'Bugs e glitches encontrados' },
                        { id: 'appeal', name: 'Recurso', emoji: '‚öñÔ∏è', desc: 'Contestar puni√ß√µes' },
                        { id: 'general', name: 'Ajuda Geral', emoji: '‚ùì', desc: 'D√∫vidas e suporte geral' },
                        { id: 'staff', name: 'Candidatura Staff', emoji: 'üëë', desc: 'Aplicar para equipe' }
                    ]
                },
                premium: {
                    color: '#FFD700',
                    title: 'üíé ATENDIMENTO PREMIUM VIP',
                    description: 'Experi√™ncia exclusiva de atendimento personalizado',
                    categories: [
                        { id: 'vip', name: 'Suporte VIP', emoji: 'üëë', desc: 'Atendimento priorit√°rio exclusivo' },
                        { id: 'premium', name: 'Premium Support', emoji: 'üíé', desc: 'Suporte para membros premium' },
                        { id: 'urgent', name: 'Urgente', emoji: 'üö®', desc: 'Problemas cr√≠ticos' },
                        { id: 'private', name: 'Privado', emoji: 'üîí', desc: 'Quest√µes confidenciais' }
                    ]
                },
                modern: {
                    color: '#00D4AA',
                    title: 'üåü HELP DESK MODERNO',
                    description: 'Interface intuitiva para todas as suas necessidades',
                    categories: [
                        { id: 'technical', name: 'T√©cnico', emoji: 'üîß', desc: 'Suporte t√©cnico especializado' },
                        { id: 'account', name: 'Conta', emoji: 'üë§', desc: 'Problemas de conta e perfil' },
                        { id: 'report', name: 'Den√∫ncia', emoji: 'üö´', desc: 'Reportar usu√°rios ou conte√∫do' },
                        { id: 'suggestion', name: 'Sugest√£o', emoji: 'üí°', desc: 'Ideias e melhorias' }
                    ]
                }
            };

            const currentStyle = styles[style];

            // Embed principal super moderno
            const mainEmbed = new EmbedBuilder()
                .setColor(currentStyle.color)
                .setTitle(currentStyle.title)
                .setDescription([
                    `### ${currentStyle.description}`,
                    '',
                    '### üìã **DEPARTAMENTOS DISPON√çVEIS**',
                    '',
                    ...currentStyle.categories.map(cat => 
                        `${cat.emoji} **${cat.name}**\\n‚îî *${cat.desc}*`
                    ),
                    '',
                    '### üöÄ **COMO FUNCIONAR**',
                    '```',
                    '1Ô∏è‚É£ Selecione uma categoria no menu abaixo',
                    '2Ô∏è‚É£ Preencha o formul√°rio com detalhes',
                    '3Ô∏è‚É£ Aguarde nossa equipe especializada',
                    '4Ô∏è‚É£ Receba suporte personalizado e r√°pido',
                    '```',
                    '',
                    '### üìä **INFORMA√á√ïES DO SISTEMA**',
                    `üè¢ **Servidor:** \`${interaction.guild.name}\``,
                    `üë• **Staff Online:** \`${interaction.guild.members.cache.filter(m => !m.user.bot && m.presence?.status !== 'offline').size}\``,
                    `üü¢ **Status:** \`OPERACIONAL\``,
                    `‚ö° **Tempo Resposta:** \`< 15 min\``,
                    '',
                    '> üí° **Sistema monitorado 24/7 com IA avan√ßada**'
                ].join('\\n'))
                .setThumbnail(interaction.guild.iconURL({ dynamic: true, size: 512 }))
                .setImage('https://via.placeholder.com/800x200/2B2D31/FFFFFF?text=IGNIS+TICKET+SYSTEM')
                .setFooter({ 
                    text: `${interaction.guild.name} ‚Ä¢ IGNIS Ticket System v3.0 ‚Ä¢ Powered by Advanced AI`,
                    iconURL: interaction.guild.iconURL({ dynamic: true })
                })
                .setTimestamp();

            // Menu de sele√ß√£o moderno
            const selectMenu = new StringSelectMenuBuilder()
                .setCustomId('ticket_category_select')
                .setPlaceholder('üéØ Selecione uma categoria de atendimento...')
                .setMinValues(1)
                .setMaxValues(1)
                .addOptions(
                    currentStyle.categories.map(cat => ({
                        label: cat.name,
                        description: cat.desc,
                        value: `ticket_${cat.id}`,
                        emoji: cat.emoji
                    }))
                );

            // Bot√µes de a√ß√£o r√°pida
            const quickActions = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('ticket_emergency')
                        .setLabel('EMERG√äNCIA')
                        .setEmoji('üö®')
                        .setStyle(ButtonStyle.Danger),
                    new ButtonBuilder()
                        .setCustomId('ticket_status_check')
                        .setLabel('STATUS SISTEMA')
                        .setEmoji('üìä')
                        .setStyle(ButtonStyle.Secondary),
                    new ButtonBuilder()
                        .setCustomId('ticket_my_tickets')
                        .setLabel('MEUS TICKETS')
                        .setEmoji('üìã')
                        .setStyle(ButtonStyle.Primary),
                    new ButtonBuilder()
                        .setCustomId('ticket_faq')
                        .setLabel('FAQ')
                        .setEmoji('‚ùì')
                        .setStyle(ButtonStyle.Success)
                );

            // Enviar painel
            const message = await targetChannel.send({
                embeds: [mainEmbed],
                components: [
                    new ActionRowBuilder().addComponents(selectMenu),
                    quickActions
                ]
            });

            // Embed de sucesso
            const successEmbed = new EmbedBuilder()
                .setColor('#00ff00')
                .setTitle('‚úÖ Painel Avan√ßado Criado!')
                .setDescription([
                    `üéØ **Painel enviado em:** ${targetChannel}`,
                    `üé® **Estilo aplicado:** ${style}`,
                    `üîß **Funcionalidades:**`,
                    '‚Ä¢ Menu de categorias interativo',
                    '‚Ä¢ Bot√µes de a√ß√£o r√°pida',
                    '‚Ä¢ Sistema de emerg√™ncia',
                    '‚Ä¢ Verifica√ß√£o de status',
                    '‚Ä¢ FAQ integrado',
                    '',
                    `üìù **ID da Mensagem:** \`${message.id}\``
                ].join('\\n'))
                .setTimestamp();

            await interaction.editReply({ embeds: [successEmbed] });

        } catch (error) {
            console.error('Erro ao criar painel avan√ßado:', error);
            await interaction.editReply({
                content: '‚ùå **Erro:** N√£o foi poss√≠vel criar o painel avan√ßado. Verifique as permiss√µes do bot.'
            });
        }
    }
};