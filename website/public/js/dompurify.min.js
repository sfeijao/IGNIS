// Minimal DOMPurify shim: provides a conservative sanitize(html) implementation
// This is intentionally small and defensive. Replace with official DOMPurify in
// production for full coverage/features: https://github.com/cure53/DOMPurify
(function(){
	'use strict';

	function _safeString(v){
		try { return String(v || ''); } catch(e) { return ''; }
	}

	function sanitize(input, config){
		var s = _safeString(input);
		try {
			// Strip script tags and their content
			s = s.replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi, '');
			// Remove event handler attributes like onclick="..."
			s = s.replace(/\s+on[a-zA-Z]+\s*=\s*(?:"[\s\S]*?"|'[\s\S]*?'|[^\s>]+)/gi, '');
			// Remove javascript: pseudo-protocols
			s = s.replace(/javascript\s*:/gi, '');
			// Remove unresolved template placeholders ${...} and encoded %24%7B
			s = s.replace(/\$\{[^}]*\}/g, '').replace(/%24%7B/gi, '');
			return s;
		} catch (e) {
			return _safeString(input).replace(/\$\{[^}]*\}/g, '');
		}
	}

	// Expose a minimal API compatible with common usage in the codebase
	window.DOMPurify = window.DOMPurify || {};
	window.DOMPurify.sanitize = sanitize;
})();

