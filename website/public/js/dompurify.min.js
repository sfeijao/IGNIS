/*
 * Local conservative DOMPurify shim (not the official library).
 * IMPORTANT: For production replace this file with the official
 * minified DOMPurify from https://github.com/cure53/DOMPurify/releases
 * The shim below intentionally implements a conservative sanitizer that
 * strips template placeholders and obvious script/injection vectors so
 * the dashboard remains usable when offline or when CDN is blocked.
 */
(function(){
  if (window.DOMPurify && typeof window.DOMPurify.sanitize === 'function') return;

  function basicSanitize(html){
    if (!html || typeof html !== 'string') return '';
    // Remove template placeholders like ${...} and encoded variants
    html = html.replace(/\$\{[^}]*\}/g, '');
    html = html.replace(/%24%7B[^%]*%7D/gi, '');
    // Remove script/style blocks
    html = html.replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi, '');
    html = html.replace(/<style[\s\S]*?>[\s\S]*?<\/style>/gi, '');
    // Strip on* attributes (onclick, onerror, etc.)
    html = html.replace(/\s+on[\w-]+\s*=\s*("[^"]*"|'[^']*'|[^\s>]+)/gi, '');
    // Strip javascript: URIs in href/src
    html = html.replace(/(href|src)\s*=\s*("javascript:[^"]*"|'javascript:[^']*'|javascript:[^\s>]+)/gi, '');
    // Remove iframe and object/embed tags
    html = html.replace(/<iframe[\s\S]*?>[\s\S]*?<\/iframe>/gi, '');
    html = html.replace(/<object[\s\S]*?>[\s\S]*?<\/object>/gi, '');
    html = html.replace(/<embed[\s\S]*?>[\s\S]*?<\/embed>/gi, '');
    return html;
  }

  window.DOMPurify = {
    sanitize: function(html, cfg){
      return basicSanitize(html);
    }
  };
})();
