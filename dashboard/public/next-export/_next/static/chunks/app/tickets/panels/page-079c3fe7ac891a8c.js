(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[741],{6e3:function(e,t,a){Promise.resolve().then(a.bind(a,4051))},4051:function(e,t,a){"use strict";a.d(t,{default:function(){return s}});var n=a(7437),i=a(2265),c=a(2837),r=a(9988);function s(){let[e,t]=(0,i.useState)(null),[a,s]=(0,i.useState)([]),[o,l]=(0,i.useState)([]),[d,h]=(0,i.useState)([]),[u,g]=(0,i.useState)(!1),[m,p]=(0,i.useState)(null),[f,y]=(0,i.useState)({name:"",channelId:""}),[j,w]=(0,i.useState)({name:""});(0,i.useEffect)(()=>{t((0,c._)())},[]);let b=async e=>{g(!0),p(null);try{let[t,a,n]=await Promise.all([r.h.getPanels(e),r.h.getCategories(e),r.h.getChannels(e)]);s((null==t?void 0:t.panels)||t||[]),l((null==a?void 0:a.categories)||a||[]),h(((null==n?void 0:n.channels)||n||[]).filter(e=>e&&e.id&&e.name))}catch(e){p((null==e?void 0:e.message)||"Erro ao carregar")}finally{g(!1)}};(0,i.useEffect)(()=>{e&&b(e)},[e]);let x=async()=>{e&&(g(!0),await r.h.scanPanels(e).catch(()=>{}),await b(e))},S=async t=>{if(t.preventDefault(),e&&f.name&&f.channelId){g(!0);try{await r.h.createPanel(e,f),y({name:"",channelId:""}),await b(e)}finally{g(!1)}}},k=async t=>{if(t.preventDefault(),e&&j.name){g(!0);try{await r.h.createCategory(e,j),w({name:""}),await b(e)}finally{g(!1)}}},N=(0,i.useMemo)(()=>a.map(e=>{let t=d.find(t=>t.id===e.channelId),a=o.find(t=>t.id===e.categoryId);return{...e,channelName:(null==t?void 0:t.name)||"-",categoryName:(null==a?void 0:a.name)||"-"}}),[a,d,o]);return(0,n.jsxs)("div",{className:"space-y-6",children:[(0,n.jsxs)("div",{className:"flex items-center gap-2",children:[(0,n.jsx)("h2",{className:"text-xl font-semibold",children:"Tickets: Pain\xe9is e Categorias"}),(0,n.jsx)("button",{onClick:()=>e&&b(e),className:"btn btn-secondary",title:"Recarregar",children:"Recarregar"}),(0,n.jsx)("button",{onClick:x,className:"btn btn-primary",title:"Escanear pain\xe9is",children:"Escanear"})]}),m&&(0,n.jsx)("div",{className:"text-red-400",children:m}),(0,n.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[(0,n.jsxs)("section",{className:"card",children:[(0,n.jsx)("div",{className:"card-header",children:"Criar Painel"}),(0,n.jsx)("div",{className:"card-body",children:(0,n.jsxs)("form",{onSubmit:S,className:"flex flex-col gap-3",children:[(0,n.jsx)("input",{value:f.name,onChange:e=>y(t=>({...t,name:e.target.value})),placeholder:"Nome do painel",className:"input",required:!0}),(0,n.jsxs)("select",{value:f.channelId,onChange:e=>y(t=>({...t,channelId:e.target.value})),className:"input",required:!0,title:"Canal do painel",children:[(0,n.jsx)("option",{value:"",children:"Selecione o canal"}),d.map(e=>(0,n.jsx)("option",{value:e.id,children:e.name},e.id))]}),(0,n.jsxs)("select",{value:f.categoryId||"",onChange:e=>y(t=>({...t,categoryId:e.target.value||void 0})),className:"input",title:"Categoria opcional",children:[(0,n.jsx)("option",{value:"",children:"Sem categoria"}),o.map(e=>(0,n.jsx)("option",{value:e.id,children:e.name},e.id))]}),(0,n.jsx)("button",{className:"btn btn-primary",disabled:u,children:"Criar painel"})]})})]}),(0,n.jsxs)("section",{className:"card",children:[(0,n.jsx)("div",{className:"card-header",children:"Criar Categoria"}),(0,n.jsx)("div",{className:"card-body",children:(0,n.jsxs)("form",{onSubmit:k,className:"flex flex-col gap-3",children:[(0,n.jsx)("input",{value:j.name,onChange:e=>w({name:e.target.value}),placeholder:"Nome da categoria",className:"input",required:!0}),(0,n.jsx)("button",{className:"btn btn-primary",disabled:u,children:"Criar categoria"})]})})]})]}),(0,n.jsxs)("section",{className:"card",children:[(0,n.jsx)("div",{className:"card-header",children:"Pain\xe9is"}),(0,n.jsx)("div",{className:"card-body overflow-auto",children:(0,n.jsxs)("table",{className:"min-w-full text-sm",children:[(0,n.jsx)("thead",{className:"text-left",children:(0,n.jsxs)("tr",{className:"border-b border-neutral-800",children:[(0,n.jsx)("th",{className:"py-2 pr-4",children:"Nome"}),(0,n.jsx)("th",{className:"py-2 pr-4",children:"Canal"}),(0,n.jsx)("th",{className:"py-2 pr-4",children:"Categoria"}),(0,n.jsx)("th",{className:"py-2 pr-4",children:"Mensagem"}),(0,n.jsx)("th",{className:"py-2",children:"A\xe7\xf5es"})]})}),(0,n.jsx)("tbody",{children:N.map(t=>(0,n.jsxs)("tr",{className:"border-b border-neutral-900/50",children:[(0,n.jsx)("td",{className:"py-2 pr-4",children:t.name}),(0,n.jsx)("td",{className:"py-2 pr-4",children:t.channelName}),(0,n.jsx)("td",{className:"py-2 pr-4",children:t.categoryName}),(0,n.jsx)("td",{className:"py-2 pr-4",children:t.messageId||"-"}),(0,n.jsxs)("td",{className:"py-2 flex gap-2",children:[(0,n.jsx)("button",{className:"btn btn-secondary btn-xs",title:"Sincronizar",onClick:()=>e&&r.h.panelAction(e,t.id,"sync").then(()=>b(e)),children:"Sync"}),(0,n.jsx)("button",{className:"btn btn-secondary btn-xs",title:"Atualizar mensagem",onClick:()=>e&&r.h.panelAction(e,t.id,"refresh_message").then(()=>b(e)),children:"Msg"}),(0,n.jsx)("button",{className:"btn btn-danger btn-xs",title:"Remover",onClick:()=>e&&r.h.panelAction(e,t.id,"delete").then(()=>b(e)),children:"Del"})]})]},t.id))})]})})]})]})}},9988:function(e,t,a){"use strict";a.d(t,{h:function(){return n}});let n={async getLogStats(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/logs/stats").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch stats");return n.json()},async getLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/logs").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch logs");return n.json()},exportLogsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/logs/export").concat(a)},async getSettings(e){let t=await fetch("/api/guild/".concat(e,"/settings"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch settings");return t.json()},async postSettings(e,t){let a=await fetch("/api/guild/".concat(e,"/settings"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save settings");return a.json()},async getRoles(e){let t=await fetch("/api/guild/".concat(e,"/roles"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch roles");return t.json()},async getMembers(e,t){let a=t?new URLSearchParams(Object.entries(t).filter(e=>{let[,t]=e;return null!=t}).map(e=>{let[t,a]=e;return[t,String(a)]})).toString():"",n=await fetch("/api/guild/".concat(e,"/members").concat(a?"?".concat(a):""),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch members");return n.json()},async getCurrentUser(){let e=await fetch("/api/user",{credentials:"include"});if(!e.ok)throw Error("Failed to fetch current user");return e.json()},async getTickets(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/tickets").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch tickets");return n.json()},exportTicketsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/tickets/export").concat(a)},async getTicketDetails(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/").concat(t),{credentials:"include"});if(!a.ok)throw Error("Failed to fetch ticket details");return a.json()},async getTicketLogs(e,t,a){let n=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",i=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/logs").concat(n),{credentials:"include"});if(!i.ok)throw Error("Failed to fetch ticket logs");return i.json()},async getTicketMessages(e,t,a){let n=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",i=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/messages").concat(n),{credentials:"include"});if(!i.ok)throw Error("Failed to fetch ticket messages");return i.json()},async ticketAction(e,t,a,n){let i=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:n})});if(!i.ok)throw Error("Failed to perform ticket action");return i.json()},async getPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch panels");return t.json()},async scanPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels/scan"),{method:"POST",credentials:"include"});if(!t.ok)throw Error("Failed to scan panels");return t.json()},async createPanel(e,t){let a=await fetch("/api/guild/".concat(e,"/panels/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create panel");return a.json()},async panelAction(e,t,a,n){let i=await fetch("/api/guild/".concat(e,"/panels/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:n})});if(!i.ok)throw Error("Failed to perform panel action");return i.json()},async getCategories(e){let t=await fetch("/api/guild/".concat(e,"/categories"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch categories");return t.json()},async createCategory(e,t){let a=await fetch("/api/guild/".concat(e,"/categories/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create category");return a.json()},async getChannels(e){let t=await fetch("/api/guild/".concat(e,"/channels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch channels");return t.json()},async getTicketsConfig(e){let t=await fetch("/api/guild/".concat(e,"/tickets/config"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch tickets config");return t.json()},async saveTicketsConfig(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/config"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save tickets config");return a.json()},async getCommands(e){let t=await fetch("/api/guild/".concat(e,"/commands"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch commands");return t.json()},async postCommand(e,t){let a=await fetch("/api/guild/".concat(e,"/commands"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to execute command action");return a.json()},async getAutomodEvents(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/mod/automod/events").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch automod events");return n.json()},async reviewAutomodEvent(e,t,a,n){let i=await fetch("/api/guild/".concat(e,"/mod/automod/events/").concat(t,"/review"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({decision:a,reason:n})});if(!i.ok)throw Error("Failed to review event");return i.json()},async getAppeals(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/mod/appeals").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch appeals");return n.json()},async decideAppeal(e,t,a,n){let i=await fetch("/api/guild/".concat(e,"/mod/appeals/").concat(t,"/decision"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({decision:a,reason:n})});if(!i.ok)throw Error("Failed to submit appeal decision");return i.json()},async getVerificationMetrics(e){let t=await fetch("/api/guild/".concat(e,"/verification/metrics"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch verification metrics");return t.json()},async getVerificationLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/verification/logs").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch verification logs");return n.json()},async purgeVerificationLogs(e){let t=await fetch("/api/guild/".concat(e,"/verification/logs"),{method:"DELETE",credentials:"include"});if(!t.ok)throw Error("Failed to purge verification logs");return t.json()}}},2837:function(e,t,a){"use strict";function n(){return new URL(window.location.href).searchParams.get("guildId")||localStorage.getItem("guildId")}function i(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],a=(e||"").trim();if(a?localStorage.setItem("guildId",a):localStorage.removeItem("guildId"),t)try{let e=new URL(window.location.href);a?e.searchParams.set("guildId",a):e.searchParams.delete("guildId"),window.history.replaceState({},"",e.toString())}catch(e){}}a.d(t,{J:function(){return i},_:function(){return n}})}},function(e){e.O(0,[971,23,744],function(){return e(e.s=6e3)}),_N_E=e.O()}]);