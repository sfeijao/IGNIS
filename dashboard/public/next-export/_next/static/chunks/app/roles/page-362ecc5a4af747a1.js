(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[550],{4195:function(e,t,a){Promise.resolve().then(a.bind(a,4311)),Promise.resolve().then(a.bind(a,912)),Promise.resolve().then(a.bind(a,1481))},4311:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return o}});var n=a(7437),r=a(2265),i=a(9988),c=a(2837);function o(){let e=(0,c._)(),[t,a]=(0,r.useState)([]),[o,s]=(0,r.useState)("novo-cargo"),[l,d]=(0,r.useState)(""),[u,h]=(0,r.useState)(!1),[f,g]=(0,r.useState)(null),p=async()=>{if(e){h(!0),g(null);try{let t=await i.h.getRoles(e);a(t.roles||[])}catch(e){g((null==e?void 0:e.message)||"Falha ao carregar cargos")}finally{h(!1)}}};(0,r.useEffect)(()=>{p()},[e]);let m=async()=>{if(e){h(!0);try{await fetch("/api/guild/".concat(e,"/roles"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:o,color:l,hoist:!1,mentionable:!1})}),await p()}finally{h(!1)}}},w=async t=>{if(e&&confirm("Remover cargo?")){h(!0);try{await fetch("/api/guild/".concat(e,"/roles/").concat(t),{method:"DELETE",credentials:"include"}),await p()}finally{h(!1)}}},y=async(t,a)=>{if(e){h(!0);try{await fetch("/api/guild/".concat(e,"/roles/").concat(t,"/move"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({direction:a,delta:1})}),await p()}finally{h(!1)}}};return(0,n.jsxs)("div",{className:"space-y-3",children:[!e&&(0,n.jsx)("div",{className:"card p-4 text-sm text-neutral-400",children:"Selecione um servidor para gerir cargos."}),(0,n.jsxs)("div",{className:"card p-4 flex flex-wrap items-end gap-3",children:[(0,n.jsxs)("div",{children:[(0,n.jsx)("label",{className:"text-xs text-neutral-400",children:"Nome"}),(0,n.jsx)("input",{className:"mt-1 w-48 bg-neutral-900 border border-neutral-700 rounded px-2 py-1",value:o,onChange:e=>s(e.target.value),placeholder:"Nome do cargo",title:"Nome do cargo"})]}),(0,n.jsxs)("div",{children:[(0,n.jsx)("label",{className:"text-xs text-neutral-400",children:"Cor (#RRGGBB)"}),(0,n.jsx)("input",{className:"mt-1 w-40 bg-neutral-900 border border-neutral-700 rounded px-2 py-1",value:l,onChange:e=>d(e.target.value),placeholder:"#ffffff",title:"Cor em hexadecimal"})]}),(0,n.jsx)("button",{onClick:m,className:"mt-5 px-3 py-2 rounded bg-brand-600 hover:bg-brand-700 disabled:opacity-50",disabled:!e||u,children:"Criar"}),(0,n.jsx)("button",{onClick:p,className:"mt-5 px-3 py-2 rounded bg-neutral-800 border border-neutral-700 hover:bg-neutral-700 disabled:opacity-50",disabled:!e||u,children:"Atualizar"})]}),(0,n.jsx)("div",{className:"card p-0 overflow-hidden",children:(0,n.jsxs)("div",{className:"divide-y divide-neutral-800",children:[u&&(0,n.jsx)("div",{className:"p-6 text-neutral-400",children:"A carregarâ€¦"}),f&&(0,n.jsx)("div",{className:"p-6 text-red-400",children:f}),t.map(e=>(0,n.jsxs)("div",{className:"p-4 flex items-center gap-3",children:[(0,n.jsx)("div",{className:"h-4 w-4 rounded",style:{background:e.color||"#888"}}),(0,n.jsxs)("div",{className:"flex-1 min-w-0",children:[(0,n.jsx)("div",{className:"text-neutral-200 truncate",children:e.name}),(0,n.jsx)("div",{className:"text-xs text-neutral-500",children:e.id})]}),(0,n.jsx)("button",{onClick:()=>y(e.id,"up"),className:"px-2 py-1 text-xs rounded bg-neutral-800 border border-neutral-700 hover:bg-neutral-700",children:"Up"}),(0,n.jsx)("button",{onClick:()=>y(e.id,"down"),className:"px-2 py-1 text-xs rounded bg-neutral-800 border border-neutral-700 hover:bg-neutral-700",children:"Down"}),!e.managed&&(0,n.jsx)("button",{onClick:()=>w(e.id),className:"px-2 py-1 text-xs rounded bg-rose-600 hover:bg-rose-500",children:"Remover"})]},e.id))]})})]})}},9988:function(e,t,a){"use strict";a.d(t,{h:function(){return n}});let n={async getLogStats(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/logs/stats").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch stats");return n.json()},async getLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/logs").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch logs");return n.json()},exportLogsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/logs/export").concat(a)},async getSettings(e){let t=await fetch("/api/guild/".concat(e,"/settings"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch settings");return t.json()},async postSettings(e,t){let a=await fetch("/api/guild/".concat(e,"/settings"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save settings");return a.json()},async getRoles(e){let t=await fetch("/api/guild/".concat(e,"/roles"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch roles");return t.json()},async getMembers(e,t){let a=t?new URLSearchParams(Object.entries(t).filter(e=>{let[,t]=e;return null!=t}).map(e=>{let[t,a]=e;return[t,String(a)]})).toString():"",n=await fetch("/api/guild/".concat(e,"/members").concat(a?"?".concat(a):""),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch members");return n.json()},async getCurrentUser(){let e=await fetch("/api/user",{credentials:"include"});if(!e.ok)throw Error("Failed to fetch current user");return e.json()},async getTickets(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/tickets").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch tickets");return n.json()},exportTicketsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/tickets/export").concat(a)},async getTicketDetails(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/").concat(t),{credentials:"include"});if(!a.ok)throw Error("Failed to fetch ticket details");return a.json()},async getTicketLogs(e,t,a){let n=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/logs").concat(n),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch ticket logs");return r.json()},async getTicketMessages(e,t,a){let n=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/messages").concat(n),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch ticket messages");return r.json()},async ticketAction(e,t,a,n){let r=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:n})});if(!r.ok)throw Error("Failed to perform ticket action");return r.json()},async getPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch panels");return t.json()},async scanPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels/scan"),{method:"POST",credentials:"include"});if(!t.ok)throw Error("Failed to scan panels");return t.json()},async createPanel(e,t){let a=await fetch("/api/guild/".concat(e,"/panels/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create panel");return a.json()},async panelAction(e,t,a,n){let r=await fetch("/api/guild/".concat(e,"/panels/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:n})});if(!r.ok)throw Error("Failed to perform panel action");return r.json()},async getCategories(e){let t=await fetch("/api/guild/".concat(e,"/categories"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch categories");return t.json()},async createCategory(e,t){let a=await fetch("/api/guild/".concat(e,"/categories/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create category");return a.json()},async getChannels(e){let t=await fetch("/api/guild/".concat(e,"/channels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch channels");return t.json()},async getTicketsConfig(e){let t=await fetch("/api/guild/".concat(e,"/tickets/config"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch tickets config");return t.json()},async saveTicketsConfig(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/config"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save tickets config");return a.json()},async getCommands(e){let t=await fetch("/api/guild/".concat(e,"/commands"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch commands");return t.json()},async postCommand(e,t){let a=await fetch("/api/guild/".concat(e,"/commands"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to execute command action");return a.json()},async getAutomodEvents(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/mod/automod/events").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch automod events");return n.json()},async reviewAutomodEvent(e,t,a,n){let r=await fetch("/api/guild/".concat(e,"/mod/automod/events/").concat(t,"/review"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({decision:a,reason:n})});if(!r.ok)throw Error("Failed to review event");return r.json()},async getAppeals(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/mod/appeals").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch appeals");return n.json()},async decideAppeal(e,t,a,n){let r=await fetch("/api/guild/".concat(e,"/mod/appeals/").concat(t,"/decision"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({decision:a,reason:n})});if(!r.ok)throw Error("Failed to submit appeal decision");return r.json()},async getVerificationMetrics(e){let t=await fetch("/api/guild/".concat(e,"/verification/metrics"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch verification metrics");return t.json()},async getVerificationLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/verification/logs").concat(a),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch verification logs");return n.json()},async purgeVerificationLogs(e){let t=await fetch("/api/guild/".concat(e,"/verification/logs"),{method:"DELETE",credentials:"include"});if(!t.ok)throw Error("Failed to purge verification logs");return t.json()}}},2837:function(e,t,a){"use strict";function n(){return new URL(window.location.href).searchParams.get("guildId")||localStorage.getItem("guildId")}function r(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],a=(e||"").trim();if(a?localStorage.setItem("guildId",a):localStorage.removeItem("guildId"),t)try{let e=new URL(window.location.href);a?e.searchParams.set("guildId",a):e.searchParams.delete("guildId"),window.history.replaceState({},"",e.toString())}catch(e){}}a.d(t,{J:function(){return r},_:function(){return n}})},912:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"BailoutToCSR",{enumerable:!0,get:function(){return r}});let n=a(5592);function r(e){let{reason:t,children:a}=e;if("undefined"==typeof window)throw new n.BailoutToCSRError(t);return a}},1481:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"PreloadCss",{enumerable:!0,get:function(){return i}});let n=a(7437),r=a(8512);function i(e){let{moduleIds:t}=e;if("undefined"!=typeof window)return null;let a=(0,r.getExpectedRequestStore)("next/dynamic css"),i=[];if(a.reactLoadableManifest&&t){let e=a.reactLoadableManifest;for(let a of t){if(!e[a])continue;let t=e[a].files.filter(e=>e.endsWith(".css"));i.push(...t)}}return 0===i.length?null:(0,n.jsx)(n.Fragment,{children:i.map(e=>(0,n.jsx)("link",{precedence:"dynamic",rel:"stylesheet",href:a.assetPrefix+"/_next/"+encodeURI(e),as:"style"},e))})}}},function(e){e.O(0,[971,23,744],function(){return e(e.s=4195)}),_N_E=e.O()}]);