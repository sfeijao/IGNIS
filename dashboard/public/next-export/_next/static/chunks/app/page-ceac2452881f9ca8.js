(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{1387:function(e,t,a){Promise.resolve().then(a.bind(a,1262)),Promise.resolve().then(a.t.bind(a,231,23))},1262:function(e,t,a){"use strict";a.d(t,{default:function(){return c}});var r=a(7437),n=a(2265),i=a(2695);function o(e){let{label:t,value:a,dotColor:n,subtle:i}=e;return(0,r.jsxs)("div",{className:"card card-gradient p-5 relative",children:[i&&(0,r.jsx)("span",{className:"absolute top-2 right-2 text-[10px] px-2 py-0.5 rounded-full bg-neutral-800 border border-neutral-700 text-neutral-300",children:i}),(0,r.jsxs)("div",{className:"badge mb-2",children:[(0,r.jsx)("span",{className:"dot",style:{backgroundColor:n}}),t]}),(0,r.jsx)("div",{className:"text-2xl font-semibold",children:a})]})}var l=a(9988),s=a(2837);function c(){let[e,t]=(0,n.useState)([{label:"Ativos",value:"—",color:"#10b981"},{label:"Warnings",value:"—",color:"#f59e0b"},{label:"Bans",value:"—",color:"#ef4444"},{label:"Kicks",value:"—",color:"#f97316"},{label:"Tickets",value:"—",color:"#6366f1"},{label:"Mod logs",value:"—",color:"#22d3ee"}]),[a,c]=(0,n.useState)("—"),[d,u]=(0,n.useState)(!1),[h,g]=(0,n.useState)("—"),[f,p]=(0,n.useState)("Dados ser\xe3o carregados ao selecionar um servidor."),[v,m]=(0,n.useState)(!1),w=(0,n.useRef)(null),[x,k]=(0,n.useState)(1),[j,y]=(0,n.useState)("—"),b=e=>e?e.toLocaleString():"—",S=e=>{var t,a,r,n;for(let i of[null==e?void 0:e.lastActivity,null==e?void 0:e.lastEventAt,null==e?void 0:e.lastLogAt,null==e?void 0:null===(t=e.latest)||void 0===t?void 0:t.timestamp,null==e?void 0:null===(a=e.latest)||void 0===a?void 0:a.at,Array.isArray(null==e?void 0:e.recent)?null===(r=e.recent[0])||void 0===r?void 0:r.timestamp:null,null==e?void 0:null===(n=e.updates)||void 0===n?void 0:n.last].filter(Boolean)){let e=new Date(i);if(!isNaN(e.getTime()))return e}return null},N=e=>{var t,a,r,n,i,o,l;for(let s of[null==e?void 0:null===(t=e.tickets)||void 0===t?void 0:t.lastUpdated,null==e?void 0:null===(a=e.tickets)||void 0===a?void 0:a.last_activity,null==e?void 0:null===(n=e.tickets)||void 0===n?void 0:null===(r=n.latest)||void 0===r?void 0:r.timestamp,null==e?void 0:e.lastTicketAt,null==e?void 0:null===(i=e.latestTicket)||void 0===i?void 0:i.timestamp,Array.isArray(null==e?void 0:null===(o=e.tickets)||void 0===o?void 0:o.recent)?null===(l=e.tickets.recent[0])||void 0===l?void 0:l.timestamp:null].filter(Boolean)){let e=new Date(s);if(!isNaN(e.getTime()))return e}return null},E=async()=>{let e=(0,s._)();if(e){m(!0);try{var a,r,n,i,o,d,h,f,v,w,x,k,j,E,L,F,T,O,P,M;let s=await l.h.getLogStats(e);if(!s)return;let m=[{label:"Ativos",value:String(null!==(x=null===(a=s.totals)||void 0===a?void 0:a.activeModerators)&&void 0!==x?x:"—"),color:"#10b981"},{label:"Warnings",value:String(null!==(k=null===(r=s.totals)||void 0===r?void 0:r.warnings)&&void 0!==k?k:"—"),color:"#f59e0b"},{label:"Bans",value:String(null!==(j=null===(n=s.totals)||void 0===n?void 0:n.bans)&&void 0!==j?j:"—"),color:"#ef4444"},{label:"Kicks",value:String(null!==(E=null===(i=s.totals)||void 0===i?void 0:i.kicks)&&void 0!==E?E:"—"),color:"#f97316"},{label:"Tickets",value:String(null!==(L=null===(o=s.totals)||void 0===o?void 0:o.tickets)&&void 0!==L?L:"—"),color:"#6366f1"},{label:"Mod logs",value:String(null!==(F=null===(d=s.totals)||void 0===d?void 0:d.logs)&&void 0!==F?F:"—"),color:"#22d3ee"}];t(m);let C=s.updatedAt?new Date(s.updatedAt):new Date;c(C.toLocaleString()),u(Date.now()-C.getTime()<9e4);let A=null!==(T=null===(h=s.totals)||void 0===h?void 0:h.warnings)&&void 0!==T?T:0,W=null!==(O=null===(f=s.totals)||void 0===f?void 0:f.bans)&&void 0!==O?O:0,R=null!==(P=null===(v=s.totals)||void 0===v?void 0:v.kicks)&&void 0!==P?P:0,U=null!==(M=null===(w=s.totals)||void 0===w?void 0:w.tickets)&&void 0!==M?M:0;p("Resumo r\xe1pido: ".concat(A," warnings, ").concat(W," bans, ").concat(R," kicks, ").concat(U," tickets."));let I=S(s);g(b(I));let B=N(s);y(b(B))}catch(e){}finally{m(!1)}}};return(0,n.useEffect)(()=>{try{let e=localStorage.getItem("dash-refresh-mins"),t=new URLSearchParams(window.location.search),a=x,r=null==t?void 0:t.get("refresh");r?a=(e=>{let t=e.trim().toLowerCase();if("off"===t||"0"===t)return 0;if(t.endsWith("s"))return Math.max(0,parseFloat(t.slice(0,-1))/60);if(t.endsWith("m"))return Math.max(0,parseFloat(t.slice(0,-1)));let a=parseFloat(t);return isNaN(a)?1:Math.max(0,a)})(r):e&&(a=Math.max(0,parseFloat(e))),k(a)}catch(e){}E()},[]),(0,n.useEffect)(()=>{w.current&&(clearInterval(w.current),w.current=null),x>0&&(w.current=setInterval(E,6e4*x));try{localStorage.setItem("dash-refresh-mins",String(x))}catch(e){}return()=>{w.current&&clearInterval(w.current)}},[x]),(0,r.jsxs)("div",{className:"space-y-3",children:[(0,r.jsx)("div",{className:"card p-4",children:(0,r.jsxs)("div",{className:"flex items-center justify-between gap-4",children:[(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"text-sm font-semibold text-neutral-200",children:"Status & Resumo"}),(0,r.jsx)("p",{className:"text-xs text-neutral-400 mt-1",children:f}),(0,r.jsxs)("p",{className:"text-xs text-neutral-400 mt-1",children:["\xdaltima atividade: ",h]}),(0,r.jsxs)("p",{className:"text-xs text-neutral-400 mt-1",children:["\xdaltimo ticket: ",j]})]}),(0,r.jsxs)("div",{className:"flex flex-col items-end gap-2",children:[(0,r.jsxs)("div",{className:"text-xs text-neutral-400 flex items-center gap-2",children:[v&&(0,r.jsx)("span",{className:"inline-block h-3 w-3 rounded-full border-2 border-neutral-500 border-t-transparent animate-spin","aria-label":"Atualizando"}),(0,r.jsxs)("span",{children:[v?"Atualizando…":"Atualizado",": ",a]})]}),(0,r.jsxs)("div",{className:"flex items-center gap-2",children:[(0,r.jsxs)("label",{className:"text-xs text-neutral-400 hidden sm:flex items-center gap-1",title:"Frequ\xeancia de atualiza\xe7\xe3o",children:[(0,r.jsx)(i.J,{name:"clock",className:"h-4 w-4"}),(0,r.jsxs)("select",{className:"text-xs rounded-md bg-neutral-900 border border-neutral-700 px-2 py-1",value:x,onChange:e=>k(parseFloat(e.target.value)),"aria-label":"Frequ\xeancia de atualiza\xe7\xe3o",children:[(0,r.jsx)("option",{value:0,children:"Off"}),(0,r.jsx)("option",{value:.1667,children:"10s"}),(0,r.jsx)("option",{value:.5,children:"30s"}),(0,r.jsx)("option",{value:1,children:"1m"}),(0,r.jsx)("option",{value:2,children:"2m"}),(0,r.jsx)("option",{value:5,children:"5m"})]})]}),(0,r.jsxs)("button",{className:"inline-flex items-center gap-1 px-2.5 py-1.5 rounded-md border border-neutral-700 bg-neutral-800 hover:bg-neutral-700 text-xs",onClick:()=>E(),disabled:v,title:"Atualizar agora",children:[(0,r.jsx)(i.J,{name:"refresh",className:"h-4 w-4"}),"Atualizar"]})]})]})]})}),(0,r.jsx)("div",{className:"grid grid-cols-3 gap-3",children:e.map(e=>(0,r.jsx)(o,{label:e.label,value:e.value,dotColor:e.color,subtle:d?"recente":void 0},e.label))})]})}},2695:function(e,t,a){"use strict";a.d(t,{J:function(){return n}});var r=a(7437);function n(e){let{name:t,className:a="h-5 w-5",stroke:n="currentColor"}=e;switch(t){case"dashboard":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",className:a,stroke:n,children:[(0,r.jsx)("rect",{x:"3",y:"10",width:"4",height:"10",rx:"1.5",strokeWidth:"1.6"}),(0,r.jsx)("rect",{x:"10",y:"4",width:"4",height:"16",rx:"1.5",strokeWidth:"1.6"}),(0,r.jsx)("rect",{x:"17",y:"13",width:"4",height:"7",rx:"1.5",strokeWidth:"1.6"})]});case"plugins":return(0,r.jsx)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:(0,r.jsx)("path",{d:"M9 3h3a2 2 0 0 1 2 2v1h1a2 2 0 1 1 0 4h-1v2a2 2 0 0 1-2 2H9v1a2 2 0 1 1-4 0v-1H4a2 2 0 1 1 0-4h1V8a5 5 0 0 1 4-5Z",strokeWidth:"1.6",strokeLinecap:"round",strokeLinejoin:"round"})});case"settings":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("path",{d:"M12 8.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 0 1 0-7Z",strokeWidth:"1.6"}),(0,r.jsx)("path",{d:"M3 12h2.2M18.8 12H21M6.2 6.2l1.6 1.1M16.2 16.7l1.6 1.1M6.2 17.8l1.6-1.1M16.2 7.3l1.6-1.1",strokeWidth:"1.6",strokeLinecap:"round"})]});case"tickets":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("path",{d:"M4 8a2 2 0 0 1 2-2h10l4 4v6a2 2 0 0 1-2 2H8l-4-4V8Z",strokeWidth:"1.6"}),(0,r.jsx)("path",{d:"M15 6v12",strokeWidth:"1.6",strokeDasharray:"2 2"})]});case"shield":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("path",{d:"M12 3 5 6v6a9 9 0 0 0 7 8 9 9 0 0 0 7-8V6l-7-3Z",strokeWidth:"1.6",strokeLinejoin:"round"}),(0,r.jsx)("path",{d:"M9.5 12.5 11 14l3.5-3.5",strokeWidth:"1.6",strokeLinecap:"round"})]});case"tag":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("path",{d:"M3 12V6a2 2 0 0 1 2-2h6l10 10-6 6L3 12Z",strokeWidth:"1.6",strokeLinejoin:"round"}),(0,r.jsx)("circle",{cx:"8",cy:"8",r:"1.2",fill:n})]});case"info":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("circle",{cx:"12",cy:"12",r:"9",strokeWidth:"1.6"}),(0,r.jsx)("path",{d:"M12 10v6",strokeWidth:"1.6",strokeLinecap:"round"}),(0,r.jsx)("circle",{cx:"12",cy:"7",r:"1.2",fill:n})]});case"refresh":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("path",{d:"M20 12a8 8 0 1 1-2.34-5.66",strokeWidth:"1.6",strokeLinecap:"round",strokeLinejoin:"round"}),(0,r.jsx)("path",{d:"M20 4v5h-5",strokeWidth:"1.6",strokeLinecap:"round",strokeLinejoin:"round"})]});case"clock":return(0,r.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",className:a,stroke:n,xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("circle",{cx:"12",cy:"12",r:"9",strokeWidth:"1.6"}),(0,r.jsx)("path",{d:"M12 7v6l4 2",strokeWidth:"1.6",strokeLinecap:"round"})]})}}a(2265)},9988:function(e,t,a){"use strict";a.d(t,{h:function(){return r}});let r={async getLogStats(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/logs/stats").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch stats");return r.json()},async getLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/logs").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch logs");return r.json()},exportLogsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/logs/export").concat(a)},async getSettings(e){let t=await fetch("/api/guild/".concat(e,"/settings"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch settings");return t.json()},async postSettings(e,t){let a=await fetch("/api/guild/".concat(e,"/settings"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save settings");return a.json()},async getRoles(e){let t=await fetch("/api/guild/".concat(e,"/roles"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch roles");return t.json()},async getMembers(e,t){let a=t?new URLSearchParams(Object.entries(t).filter(e=>{let[,t]=e;return null!=t}).map(e=>{let[t,a]=e;return[t,String(a)]})).toString():"",r=await fetch("/api/guild/".concat(e,"/members").concat(a?"?".concat(a):""),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch members");return r.json()},async getCurrentUser(){let e=await fetch("/api/user",{credentials:"include"});if(!e.ok)throw Error("Failed to fetch current user");return e.json()},async getTickets(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/tickets").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch tickets");return r.json()},exportTicketsUrl(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"";return"/api/guild/".concat(e,"/tickets/export").concat(a)},async getTicketDetails(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/").concat(t),{credentials:"include"});if(!a.ok)throw Error("Failed to fetch ticket details");return a.json()},async getTicketLogs(e,t,a){let r=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/logs").concat(r),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch ticket logs");return n.json()},async getTicketMessages(e,t,a){let r=a?"?".concat(new URLSearchParams(Object.entries(a).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",n=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/messages").concat(r),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch ticket messages");return n.json()},async ticketAction(e,t,a,r){let n=await fetch("/api/guild/".concat(e,"/tickets/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:r})});if(!n.ok)throw Error("Failed to perform ticket action");return n.json()},async getPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch panels");return t.json()},async scanPanels(e){let t=await fetch("/api/guild/".concat(e,"/panels/scan"),{method:"POST",credentials:"include"});if(!t.ok)throw Error("Failed to scan panels");return t.json()},async createPanel(e,t){let a=await fetch("/api/guild/".concat(e,"/panels/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create panel");return a.json()},async panelAction(e,t,a,r){let n=await fetch("/api/guild/".concat(e,"/panels/").concat(t,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:r})});if(!n.ok)throw Error("Failed to perform panel action");return n.json()},async getCategories(e){let t=await fetch("/api/guild/".concat(e,"/categories"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch categories");return t.json()},async createCategory(e,t){let a=await fetch("/api/guild/".concat(e,"/categories/create"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create category");return a.json()},async getChannels(e){let t=await fetch("/api/guild/".concat(e,"/channels"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch channels");return t.json()},async getTicketsConfig(e){let t=await fetch("/api/guild/".concat(e,"/tickets/config"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch tickets config");return t.json()},async saveTicketsConfig(e,t){let a=await fetch("/api/guild/".concat(e,"/tickets/config"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to save tickets config");return a.json()},async getCommands(e){let t=await fetch("/api/guild/".concat(e,"/commands"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch commands");return t.json()},async postCommand(e,t){let a=await fetch("/api/guild/".concat(e,"/commands"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to execute command action");return a.json()},async getAutomodEvents(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/mod/automod/events").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch automod events");return r.json()},async reviewAutomodEvent(e,t,a,r){let n=await fetch("/api/guild/".concat(e,"/mod/automod/events/").concat(t,"/review"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a})});if(!n.ok)throw Error("Failed to review event");return n.json()},async getAppeals(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/mod/appeals").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch appeals");return r.json()},async decideAppeal(e,t,a,r){let n=await fetch("/api/guild/".concat(e,"/mod/appeals/").concat(t,"/decision"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({status:a,response:r||""})});if(!n.ok)throw Error("Failed to submit appeal decision");return n.json()},async getVerificationMetrics(e){let t=await fetch("/api/guild/".concat(e,"/verification/metrics"),{credentials:"include"});if(!t.ok)throw Error("Failed to fetch verification metrics");return t.json()},async getVerificationLogs(e,t){let a=t?"?".concat(new URLSearchParams(Object.entries(t).map(e=>{let[t,a]=e;return[t,String(a)]}))):"",r=await fetch("/api/guild/".concat(e,"/verification/logs").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch verification logs");return r.json()},async purgeVerificationLogs(e){let t=await fetch("/api/guild/".concat(e,"/verification/logs"),{method:"DELETE",credentials:"include"});if(!t.ok)throw Error("Failed to purge verification logs");return t.json()}}},2837:function(e,t,a){"use strict";function r(){return new URL(window.location.href).searchParams.get("guildId")||localStorage.getItem("guildId")}function n(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],a=(e||"").trim();if(a?localStorage.setItem("guildId",a):localStorage.removeItem("guildId"),t)try{let e=new URL(window.location.href);a?e.searchParams.set("guildId",a):e.searchParams.delete("guildId"),window.history.replaceState({},"",e.toString())}catch(e){}}a.d(t,{J:function(){return n},_:function(){return r}})}},function(e){e.O(0,[231,971,23,744],function(){return e(e.s=1387)}),_N_E=e.O()}]);