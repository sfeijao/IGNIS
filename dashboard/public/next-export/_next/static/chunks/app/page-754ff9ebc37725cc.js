(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{1387:function(t,e,a){Promise.resolve().then(a.bind(a,1262)),Promise.resolve().then(a.t.bind(a,231,23))},1262:function(t,e,a){"use strict";a.d(e,{default:function(){return l}});var r=a(7437),n=a(2265);function o(t){let{label:e,value:a,dotColor:n}=t;return(0,r.jsxs)("div",{className:"card card-gradient p-5",children:[(0,r.jsxs)("div",{className:"badge mb-2",children:[(0,r.jsx)("span",{className:"dot",style:{backgroundColor:n}}),e]}),(0,r.jsx)("div",{className:"text-2xl font-semibold",children:a})]})}var c=a(9988),i=a(2837);function l(){let[t,e]=(0,n.useState)([{label:"Ativos",value:"—",color:"#10b981"},{label:"Warnings",value:"—",color:"#f59e0b"},{label:"Bans",value:"—",color:"#ef4444"},{label:"Kicks",value:"—",color:"#f97316"},{label:"Tickets",value:"—",color:"#6366f1"},{label:"Mod logs",value:"—",color:"#22d3ee"}]);return(0,n.useEffect)(()=>{let t=(0,i._)();t&&c.h.getLogStats(t).then(t=>{var a,r,n,o,c,i,l,s,d,u,g,f;t&&e([{label:"Ativos",value:String(null!==(l=null===(a=t.totals)||void 0===a?void 0:a.activeModerators)&&void 0!==l?l:"—"),color:"#10b981"},{label:"Warnings",value:String(null!==(s=null===(r=t.totals)||void 0===r?void 0:r.warnings)&&void 0!==s?s:"—"),color:"#f59e0b"},{label:"Bans",value:String(null!==(d=null===(n=t.totals)||void 0===n?void 0:n.bans)&&void 0!==d?d:"—"),color:"#ef4444"},{label:"Kicks",value:String(null!==(u=null===(o=t.totals)||void 0===o?void 0:o.kicks)&&void 0!==u?u:"—"),color:"#f97316"},{label:"Tickets",value:String(null!==(g=null===(c=t.totals)||void 0===c?void 0:c.tickets)&&void 0!==g?g:"—"),color:"#6366f1"},{label:"Mod logs",value:String(null!==(f=null===(i=t.totals)||void 0===i?void 0:i.logs)&&void 0!==f?f:"—"),color:"#22d3ee"}])}).catch(()=>{})},[]),(0,r.jsx)("div",{className:"grid grid-cols-3 gap-3",children:t.map(t=>(0,r.jsx)(o,{label:t.label,value:t.value,dotColor:t.color},t.label))})}},9988:function(t,e,a){"use strict";a.d(e,{h:function(){return r}});let r={async getLogStats(t,e){let a=e?"?".concat(new URLSearchParams(Object.entries(e).map(t=>{let[e,a]=t;return[e,String(a)]}))):"",r=await fetch("/api/guild/".concat(t,"/logs/stats").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch stats");return r.json()},async getLogs(t,e){let a=e?"?".concat(new URLSearchParams(Object.entries(e).map(t=>{let[e,a]=t;return[e,String(a)]}))):"",r=await fetch("/api/guild/".concat(t,"/logs").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch logs");return r.json()},exportLogsUrl(t,e){let a=e?"?".concat(new URLSearchParams(Object.entries(e).map(t=>{let[e,a]=t;return[e,String(a)]}))):"";return"/api/guild/".concat(t,"/logs/export").concat(a)},async getSettings(t){let e=await fetch("/api/guild/".concat(t,"/settings"),{credentials:"include"});if(!e.ok)throw Error("Failed to fetch settings");return e.json()},async postSettings(t,e){let a=await fetch("/api/guild/".concat(t,"/settings"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(e)});if(!a.ok)throw Error("Failed to save settings");return a.json()},async getRoles(t){let e=await fetch("/api/guild/".concat(t,"/roles"),{credentials:"include"});if(!e.ok)throw Error("Failed to fetch roles");return e.json()},async getMembers(t,e){let a=e?new URLSearchParams(Object.entries(e).filter(t=>{let[,e]=t;return null!=e}).map(t=>{let[e,a]=t;return[e,String(a)]})).toString():"",r=await fetch("/api/guild/".concat(t,"/members").concat(a?"?".concat(a):""),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch members");return r.json()},async getCurrentUser(){let t=await fetch("/api/user",{credentials:"include"});if(!t.ok)throw Error("Failed to fetch current user");return t.json()},async getTickets(t,e){let a=e?"?".concat(new URLSearchParams(Object.entries(e).map(t=>{let[e,a]=t;return[e,String(a)]}))):"",r=await fetch("/api/guild/".concat(t,"/tickets").concat(a),{credentials:"include"});if(!r.ok)throw Error("Failed to fetch tickets");return r.json()},exportTicketsUrl(t,e){let a=e?"?".concat(new URLSearchParams(Object.entries(e).map(t=>{let[e,a]=t;return[e,String(a)]}))):"";return"/api/guild/".concat(t,"/tickets/export").concat(a)},async getTicketDetails(t,e){let a=await fetch("/api/guild/".concat(t,"/tickets/").concat(e),{credentials:"include"});if(!a.ok)throw Error("Failed to fetch ticket details");return a.json()},async getTicketLogs(t,e,a){let r=a?"?".concat(new URLSearchParams(Object.entries(a).map(t=>{let[e,a]=t;return[e,String(a)]}))):"",n=await fetch("/api/guild/".concat(t,"/tickets/").concat(e,"/logs").concat(r),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch ticket logs");return n.json()},async getTicketMessages(t,e,a){let r=a?"?".concat(new URLSearchParams(Object.entries(a).map(t=>{let[e,a]=t;return[e,String(a)]}))):"",n=await fetch("/api/guild/".concat(t,"/tickets/").concat(e,"/messages").concat(r),{credentials:"include"});if(!n.ok)throw Error("Failed to fetch ticket messages");return n.json()},async ticketAction(t,e,a,r){let n=await fetch("/api/guild/".concat(t,"/tickets/").concat(e,"/action"),{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({action:a,data:r})});if(!n.ok)throw Error("Failed to perform ticket action");return n.json()}}},2837:function(t,e,a){"use strict";function r(){return new URL(window.location.href).searchParams.get("guildId")||localStorage.getItem("guildId")}function n(t){let e=!(arguments.length>1)||void 0===arguments[1]||arguments[1],a=(t||"").trim();if(a?localStorage.setItem("guildId",a):localStorage.removeItem("guildId"),e)try{let t=new URL(window.location.href);a?t.searchParams.set("guildId",a):t.searchParams.delete("guildId"),window.history.replaceState({},"",t.toString())}catch(t){}}a.d(e,{J:function(){return n},_:function(){return r}})}},function(t){t.O(0,[231,971,23,744],function(){return t(t.s=1387)}),_N_E=t.O()}]);